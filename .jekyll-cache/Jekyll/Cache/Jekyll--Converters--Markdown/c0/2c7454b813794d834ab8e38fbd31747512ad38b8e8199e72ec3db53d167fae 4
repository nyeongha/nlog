I"'<h3 id="백준-24444번알고리즘-수업---너비-우선-탐색-1-python">백준-24444번(알고리즘 수업 - 너비 우선 탐색 1)-python</h3>

<p>2차원 배열을 for문이 아닌 다른 방식으로 생성해볼까 하여</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">adl</span><span class="o">=</span><span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">V</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
</code></pre></div></div>

<p>이부분을 아래부분으로</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">adl</span><span class="o">=</span><span class="p">[[]]</span><span class="o">*</span><span class="p">(</span><span class="n">V</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<p>바꾸어 문제를 풀었는데 모든 배열이 복사되어 나왔다.<br />
그래서 문제가 무엇인지 검색해보았더니,2차원배열을 *를 이용하여 생성하는것은 얕은 복사가 진행되어 배열 내의 요소들이 같은 객체를 가리키게 된다고 하였다.<br />
다시 말해서,이 방식으로 2차원 배열을 선언하고 요소를 변경하게 되면 다른 요소들의 값도 같이 바뀌는 것이었다.<br /></p>

<p>참고:<a href="https://velog.io/@sjy5386/Python-2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0">
https://velog.io/@sjy5386/Python-2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">deque</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="nb">input</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span>


<span class="n">V</span><span class="p">,</span><span class="n">E</span><span class="p">,</span><span class="n">R</span><span class="o">=</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
<span class="n">visited</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">V</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
<span class="n">adl</span><span class="o">=</span><span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">V</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
<span class="n">cnt</span><span class="o">=</span><span class="mi">1</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">E</span><span class="p">):</span>
    <span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="o">=</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
    <span class="n">adl</span><span class="p">[</span><span class="n">m</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="n">adl</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
    
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">adl</span><span class="p">:</span>
    <span class="n">x</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>    
    
<span class="k">def</span> <span class="nf">bfs</span><span class="p">(</span><span class="n">R</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">cnt</span>
    <span class="n">a</span><span class="o">=</span><span class="n">deque</span><span class="p">([</span><span class="n">R</span><span class="p">])</span>
    <span class="n">visited</span><span class="p">[</span><span class="n">R</span><span class="p">]</span><span class="o">=</span><span class="n">cnt</span>
    <span class="k">while</span> <span class="n">a</span><span class="p">:</span>
        <span class="n">b</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">popleft</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">adl</span><span class="p">[</span><span class="n">b</span><span class="p">]:</span>
            <span class="k">if</span> <span class="n">visited</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">:</span>
                <span class="n">cnt</span><span class="o">+=</span><span class="mi">1</span>
                <span class="n">visited</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">cnt</span>
                <span class="n">a</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="n">bfs</span><span class="p">(</span><span class="n">R</span><span class="p">)</span>
<span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">visited</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
    
                    
    
</code></pre></div></div>
:ET